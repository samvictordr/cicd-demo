name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with commit SHA tag
      - name: Build and push Docker image (commit SHA)
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/webapp
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          SHA_TAG=${GITHUB_SHA::7}

          echo "Building and pushing $IMAGE_ID:$SHA_TAG"
          docker build -t $IMAGE_ID:$SHA_TAG .
          docker push $IMAGE_ID:$SHA_TAG

      # If this push is also a release, tag as latest
      - name: Tag image as latest (on release)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/webapp
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag $IMAGE_ID:${GITHUB_SHA::7} $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

      # Create GitHub Release (always on push)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          name: "Build ${{ github.run_number }}"
          body: |
            Docker image available:
            - ghcr.io/${{ github.repository }}/webapp:${GITHUB_SHA::7}

  deploy-pages:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
